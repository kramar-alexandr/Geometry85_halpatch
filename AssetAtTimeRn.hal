external procedure HTValuesPerMonth(Integer,var string);
external function Boolean CheckAssetRespPersonMatch(string,string,string,Date,Date);
external procedure HTInventoryNrs(string,string,var string);
external procedure HTCategories(string,string,var string);
external procedure HTDepartments(string,string,var string);
external procedure OneAT2UnitDeprCalculation(Integer,Integer,Integer,Boolean,Date,Date,string,var val,var val,var val,var val,var string,val,val,Boolean);
//external function Integer DaysInMonth(Integer,Integer);// Edit ************************** BPI Ukraine - KramarAlexandr - Wednesday, 4 December 2019 15:44:43
external function Boolean CheckifAT2UnitSold(string,Date);
// Edit Start ---------------------------------------------- Edit Start
	//Wednesday, 4 December 2019 15:44:47
	// 62
function Boolean CheckAssetCatMatchArray(string category,string AT2Class,string fcl,string tcl)
BEGIN
  record AT2Vc ATCatr;
  Boolean res;
  string 20 ATClass;
 
  res = true;
  ATCatr.Code = category;
  if (ReadFirstMain(ATCatr,1,true)) then begin
    ATClass = AT2Class;
    if (blank(ATClass)) then begin
      ATClass = ATCatr.AT2Class;
    end;
    if (nonblank(fcl)) then begin  
      
      if (ATClass<fcl) or (tcl<ATClass) then begin
        res = false;
      end;
    end else begin
      res = true;
    end;
    if (ATCatr.Exclude!=0) then begin
      res = false;
    end;
  end;
  CheckAssetCatMatchArray = res;
  RETURN;
END;// 62

function val LastDpr(string InventoryNr,Date dat)
begin
  val res;
  record AT2DprVc Dpr;
  Boolean TrHs;
  record InvrsVc Invrsr;
  
  TrHs = true;
  Invrsr.InventoryNr = InventoryNr;
  Invrsr.FileName = "AT2DprVc";
  Invrsr.TransDate = dat;
  while (LoopBackKey("FileName",Invrsr,3,TrHs)) begin
    if (Invrsr.InventoryNr!=InventoryNr) then begin TrHs = false; end;
    if (Invrsr.FileName!="AT2DprVc") then begin TrHs = false; end;
    if (Invrsr.TransDate>dat) then begin TrHs = false; end;
    if (TrHs) then begin
      Dpr.SerNr = Invrsr.TransNr;
      if (ReadFirstMain(Dpr,1,true)) then begin
        res = Dpr.StartVal;
        TrHs = false;
      end;
    end;    
  end;
  LastDpr = res;
  return;
end;

global
procedure FindAssetDepartmentOnDate(record AT2UnitVc ATUnitr,Date d1,var string res) 
BEGIN
  Boolean found;
  record InvrsVc Invrsr;
  record AT2TakeVc ATTaker;
  
  res = ATUnitr.DepCode;
  found = true;
  Invrsr.InventoryNr = ATUnitr.InventoryNr;
  Invrsr.FileName = "AT2TakeVc";
  Invrsr.TransDate = d1;
  while (LoopBackKey("FileName",Invrsr,3,found)) begin
    if (Invrsr.InventoryNr!=ATUnitr.InventoryNr) then begin found = false; end;
    if (Invrsr.FileName!="AT2TakeVc") then begin found = false; end;
    if (Invrsr.TransDate>d1) then begin found = false; end;
    if (found) then begin
      ATTaker.SerNr = Invrsr.TransNr;
      if (ReadFirstMain(ATTaker,1,true)) then begin
        if (ATTaker.PhysCheckf==0) then begin
          res = ATTaker.DepCode;
          found = false;
        end;
      end;
    end;
  end;    
  RETURN;
END;

procedure FindDepr(record AT2UnitVc ATr, record RcVc RepSpec, var val depr)
begin
   val dprbef,t,dprprc1,dprprc2,svp;
   string 255 tstr;
   Date sd;
   
   dprbef = 0;
   depr = 0;
   t = blankval;
   sd = ATr.StartingDate1;
   if (blankdate(sd)) then begin sd = CurrentDate; end;
   OneAT2UnitDeprCalculation(0,0,0,false,sd,RepSpec.d1,ATr.InventoryNr,dprbef,depr,t,t,tstr,svp,ATr.ResVal,false);
  return;
end;

procedure FindAssets(record DepVc Depr,record RcVc RepSpec)
begin
  record AT2UnitVc ATr;
  record AT2Vc AT2r;
  record AT2TakeVc AT2Taker;
  row AT2TakeVc AT2Takerw;
  record RentINVc RentINr;
  Boolean TrHs, testf,firstf;
  val dprv,nbv;
  val tpurch, tdepr,tnbv;
  string 255 tstr;
  val purchval;
  string 5 fcl,tcl;// 62// Edit ************************** BPI Ukraine - KramarAlexandr - Wednesday, 4 December 2019 15:44:50
  vector string 20 atmov,atuser;
  integer i,rwcnt;
  
  while(loopmain(AT2Taker,1,true))begin
    rwcnt = matrowcnt(AT2Taker);
    for(i=0;i<rwcnt;i=i+1)begin
      matrowget(AT2Taker,i,AT2Takerw);
      atmov[AT2Takerw.InventoryNr] = AT2Taker.SerNr;
      atuser[AT2Takerw.InventoryNr] = AT2Taker.RespPerson;
    end;
  end;
  
  TrHs = true; 
  firstf = true; 
  ATr.DepCode = Depr.Code;
  while (LoopKey("InventoryNr",ATr,1,TrHs)) begin
    if (TrHs) then begin
/*    
      if (ATr.DepCode!=Depr.Code) then begin
        TrHs = false;
      end;
*/      
    end;
    if (TrHs) then begin
      testf = true;  
      if (nonblank(RepSpec.f1)) then begin
        if (ATr.InventoryNr <> RepSpec.f1) then begin
          testf = false;
        end;
      end;
      if (nonblank(RepSpec.f3)) then begin
        if (ATr.AT2Code <> RepSpec.f3) then begin
          testf = false;
        end;
      end;
      if (CheckifAT2UnitSold(ATr.InventoryNr,RepSpec.d1)) then begin
        testf = false;
      end;
      if (ATr.Activef<>0) then begin
        testf = false;
      end;
      if (nonblankdate(RepSpec.d1)) then begin
        if (ATr.PurchaseDate>RepSpec.d1) then begin
          testf = false;
        end;
      end;
// Edit Start ---------------------------------------------- Edit Start
	//Wednesday, 4 December 2019 15:44:53
	      if (nonblank(RepSpec.f4)) then begin // 62
			fcl=FirstInRange(RepSpec.f4,5);// 62
			tcl=LastInRange(RepSpec.f4,5);// 62
			if (CheckAssetCatMatchArray(ATr.AT2Code,ATr.AT2Class,fcl,tcl)==false) then begin testf = false; end;// 62
      end;// 62
      

	// Edit End ---------------------------------------------- Edit End
	      if (testf) then begin
        if (nonblank(RepSpec.TransStr)) then begin      
          if (CheckAssetRespPersonMatch(ATr.InventoryNr,ATr.RespPerson,RepSpec.TransStr,RepSpec.d1,RepSpec.d1)==false) then begin testf = false; end;
        end;        
      end;
      
      if (testf) then begin
        FindAssetDepartmentOnDate(ATr,RepSpec.d1,tstr);
        if (Depr.Code!=tstr) then begin testf = false; end;
      end;
      if (testf) then begin
        purchval = LastDpr(ATr.InventoryNr,RepSpec.sEndDate);
        if (blank(purchval)) then begin
          purchval = ATr.PurchVal;
        end;
        if (firstf) then begin
          StartFormat(15);
          OutString(0,0,USetStr(13710),false);
          OutString(35,0,USetStr(13117),false);
          
          OutString(60,0,Depr.Code,false);
          OutString(90,0,Depr.Comment,false);
          EndFormat;
          StartFormat(15);
          OutString(0,0,USetStr(13702),false);
          OutString(80,0,USetStr(13703),false);
          OutString(280,0,USetStr(13704),true);
          OutString(340,0,USetStr(13705),true);
          OutString(390,0,USetStr(13103),true);
          
          OutString(410,0,USetStr(13706),true);
          OutString(1,0,USetStr(13707),true);
          EndFormat;  
          firstf = false;
          Gray_Divider(0,1);
        end;
        StartFormat(15);
        OutString(0,"DblAT2UnitVc",ATr.InventoryNr,false);
        OutString(35,0,atuser[ATr.InventoryNr],false);
        OutString(80,0,ATr.Description,false);
        OutVal(280,0,purchval*ATr.Quantity,M40Val,true);
        FindDepr(ATr,RepSpec,dprv);
        dprv = dprv + ATr.InitDeprVal1;
        OutVal(340,0,dprv,M40Val,true);
        nbv = ATr.Quantity*purchval - dprv;
        
        OutString(390,"DblAT2TakeVc",atmov[ATr.InventoryNr],true);
        
        OutVal(410,0,nbv,M40Val,true);
        OutString(1,0,ATr.PurchaseDate,true);
        EndFormat;    
        tpurch = tpurch + ATr.Quantity*purchval;
        tdepr = tdepr + dprv;
        end;
    end;       
  end;  
  if (tpurch <> 0) or (tdepr <> 0) then begin
    Gray_Divider(0,1);
    StartFormat(15);
    OutString(0,0,USetStr(13708),false);
    OutVal(280,0,tpurch,M40Val,true);
    OutVal(340,0,tdepr,M40Val,true);
    tnbv = tpurch - tdepr;
    OutVal(410,0,tnbv,M40Val,true);
    EndFormat;    
  end;
  return;
end; 

global
procedure AssetAtTimeRn(record RcVc RepSpec)
begin
  record DepVc Depr;
  Boolean TrHs, testf;
  Integer rw;
  string 255 tstr;

  TrHs = true;
  if (blankdate(RepSpec.d1)) then begin RepSpec.d1 = CurrentDate; end;
  StartReportJob(USetStr(13700));
   rw = 1;  
   HTDepartments(RepSpec.f2,RepSpec.f2,tstr);
   Header(rw,tstr,1);
   rw = rw + 1;
   HTInventoryNrs(RepSpec.f1,RepSpec.f1,tstr);
   Header(rw, tstr,0);
   HTCategories(RepSpec.f3,RepSpec.f3,tstr);
   Header(rw,tstr,1);
   rw = rw + 1;
   HTValuesPerMonth(RepSpec.Comparison,tstr);
   Header(rw, tstr, 0);
   if (nonblankdate(RepSpec.d1)) then begin
     tstr = USetStr(13709) & ": ";
     tstr = tstr & RepSpec.d1;
     Header(rw,tstr,1);
     rw = rw + 1;
   end;
   if (nonblank(RepSpec.TransStr)) then begin
     tstr = USetStr(9201);
     tstr = tstr & " ";
     tstr = tstr & RepSpec.TransStr;
     Header(rw, tstr, 1);
     rw = rw + 1;
   end;    
  EndHeader;

  Depr.Code = RepSpec.f2;
  while (LoopMain(Depr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(RepSpec.f2)) then begin
        if (Depr.Code!=RepSpec.f2) then begin
          TrHs = false;
        end;
      end;
    end;
    if (TrHs) then begin      
      FindAssets(Depr,RepSpec);  
    end;
  end;
  EndJob;
  return;
end;

